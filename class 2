线程启动、结束、创建线程的方法、join、detach

Thread：是个标准库的类

Join（）：阻塞主线程，得待子线程执行完毕

detach（）：主线程不和子线程汇合，主线程、子线程各执行各的，主线程不等待子线程，即可自己结束；引入该函数，为了让主线程不等待子线程执行；一旦调用了detach（），就不能再调用join（），否则程序会报告异常；
一旦调用该函数，与主线程关联的thread对象就会失去与这个主线程的关联，此时这个子线程就会驻留在后台运行；该子线程就相当于被c++运行时刻接管，有运行时库负责清理该线程相关的资源（守护线程）；

Joinable():判断是否可以成功使用join（）或者detach（）；




其他创建线程的方法

1.	用类对象（可调用对象），以及一个问题范例
2.	用lambda表达式
```
auto mythread=[]{
//任务….
//任务….
}
```
